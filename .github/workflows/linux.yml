name: Linux

on: [push]


env: 
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_FORCE_SYSTEM_BINARIES: 1
  CMAKE_BUILD_TYPE: "Release"

jobs:
  debian-11-build:
    runs-on: ubuntu-latest
    container:
      image: debian:11
    steps:
      - name: get-cmake
        uses: lukka/get-cmake@v3.28.1
            
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install git
        run: |
          apt-get update -y
          apt-get install -y git

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Git config safe directory
        shell: bash
        run: bash ./scripts/debian-11/1.5-git-safe.sh

      - name: Install Dependencies
        run: bash ./scripts/debian-11/1-install-deps.sh

      - name: Create Build Environment
        run: bash ./scripts/debian-11/2-configure.sh '-DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake'

      - name: Build Server
        run: bash ./scripts/debian-11/3-build.sh

      - name: Archive server artifact
        uses: actions/upload-artifact@v2
        with:
          name: BeamMP-Server-debian
          path: ./bin/BeamMP-Server

      - name: Archive server debug info artifact
        uses: actions/upload-artifact@v2
        with:
          name: BeamMP-Server-debian.debug
          path: ./bin/BeamMP-Server.debug

      - name: Build Tests
        run: bash ./scripts/debian-11/3-build-tests.sh

      - name: Install Runtime Dependencies
        run: bash ./scripts/debian-11/4-install-runtime-deps.sh

      - name: Test
        run: ./bin/BeamMP-Server-tests

  debian-11-arm64-build:
    runs-on: [Linux, ARM64]
    container:
      image: debian:11
    env:
      VCPKG_DEFAULT_TRIPLET: "arm64-linux"
    steps:
      - uses: actions/setup-node@v4

      - name: get-cmake
        uses: lukka/get-cmake@v3.28.1

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install git
        run: |
          apt-get update -y
          apt-get install -y git

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Git config safe directory
        shell: bash
        run: bash ./scripts/debian-11/1.5-git-safe.sh

      - name: Install Dependencies
        run: bash ./scripts/debian-11/1-install-deps.sh

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          runVcpkgInstall: true

      - name: Create Build Environment
        run: bash ./scripts/debian-11/2-configure.sh '-DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake'

      - name: Build Server
        run: bash ./scripts/debian-11/3-build.sh

      - name: Archive server artifact
        uses: actions/upload-artifact@v2
        with:
          name: BeamMP-Server-debian.arm64
          path: ./bin/BeamMP-Server

      - name: Archive server debug info artifact
        uses: actions/upload-artifact@v2
        with:
          name: BeamMP-Server-debian.arm64.debug
          path: ./bin/BeamMP-Server.debug

      - name: Build Tests
        run: bash ./scripts/debian-11/3-build-tests.sh

      - name: Install Runtime Dependencies
        run: bash ./scripts/debian-11/4-install-runtime-deps.sh

      - name: Test
        run: ./bin/BeamMP-Server-tests

  ubuntu-22-04-build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    steps:
      - uses: actions/setup-node@v4

      - name: get-cmake
        uses: lukka/get-cmake@v3.28.1

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install git
        run: |
          apt-get update -y
          apt-get install -y git

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Git config safe directory
        shell: bash
        run: bash ./scripts/ubuntu-22.04/1.5-git-safe.sh

      - name: Install Dependencies
        run: bash ./scripts/ubuntu-22.04/1-install-deps.sh

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          runVcpkgInstall: true

      - name: Create Build Environment
        run: bash ./scripts/ubuntu-22.04/2-configure.sh '-DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake'

      - name: Build Server
        run: bash ./scripts/ubuntu-22.04/3-build.sh

      - name: Archive server artifact
        uses: actions/upload-artifact@v2
        with:
          name: BeamMP-Server-ubuntu
          path: ./bin/BeamMP-Server
      
      - name: Archive server debug info artifact
        uses: actions/upload-artifact@v2
        with:
          name: BeamMP-Server-ubuntu.debug
          path: ./bin/BeamMP-Server.debug

      - name: Build Tests
        run: bash ./scripts/ubuntu-22.04/3-build-tests.sh

      - name: Install Runtime Dependencies
        run: bash ./scripts/ubuntu-22.04/4-install-runtime-deps.sh

      - name: Test
        run: ./bin/BeamMP-Server-tests

  ubuntu-22-04-arm64-build:
    runs-on: [Linux, ARM64]
    container:
      image: ubuntu:22.04
    env:
      VCPKG_DEFAULT_TRIPLET: "arm64-linux"
    steps:
      - uses: actions/setup-node@v4

      - name: get-cmake
        uses: lukka/get-cmake@v3.28.1

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install git
        run: |
          apt-get update -y
          apt-get install -y git

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Git config safe directory
        shell: bash
        run: bash ./scripts/ubuntu-22.04/1.5-git-safe.sh

      - name: Install Dependencies
        run: bash ./scripts/ubuntu-22.04/1-install-deps.sh

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          runVcpkgInstall: true

      - name: Create Build Environment
        run: bash ./scripts/ubuntu-22.04/2-configure.sh '-DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake'

      - name: Build Server
        run: bash ./scripts/ubuntu-22.04/3-build.sh

      - name: Archive server artifact
        uses: actions/upload-artifact@v2
        with:
          name: BeamMP-Server-ubuntu.arm64
          path: ./bin/BeamMP-Server
      
      - name: Archive server debug info artifact
        uses: actions/upload-artifact@v2
        with:
          name: BeamMP-Server-ubuntu.arm64.debug
          path: ./bin/BeamMP-Server.debug

      - name: Build Tests
        run: bash ./scripts/ubuntu-22.04/3-build-tests.sh

      - name: Install Runtime Dependencies
        run: bash ./scripts/ubuntu-22.04/4-install-runtime-deps.sh

      - name: Test
        run: ./bin/BeamMP-Server-tests
